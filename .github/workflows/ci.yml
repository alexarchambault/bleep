name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:

jobs:
  scalafmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: coursier/setup-action@v1.2.0-M3
        with:
          apps: scalafmt
          jvm: "temurin:17"
      - name: Check formatting
        run: scalafmt --test

  bridges:
    name: Test platform bridges
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: coursier/setup-action@v1.2.0-M3
        with:
          jvm: "temurin:17"
      - name: Tests
        run: |
          .github/setup-test-projects.sh &&\
          sbt "+jsBridge1/publishLocal" "+jsBridge1/test"
        shell: bash

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    name: Test
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: coursier/setup-action@v1.2.0-M3
        with:
          jvm: "temurin:17"
      - name: Compile and test main projects
        run: |
          .github/setup-test-projects.sh &&\
          sbt "+backend/test" "+frontend/test"
        shell: bash

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: coursier/setup-action@v1.2.0-M3
        with:
          jvm: "temurin:17"
      - name: Release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
